[{"id":"bootcamp-prep","title":"Practical Steps For Success In a Coding Bootcamp","author":"Kaisma Penn-Titley","pubDate":"2017-10-03","content":"<p>So you've jumped on the bandwagon and decided to sign up for a bootcamp, or more formally, a cohort, and is excited about all the languages and frameworks you are expecting learn but have never written a line of code, or, have very little experience coding.  Here are some practical steps that can help you keep up in such a moderate to fast-paced learning environment:</p>\r\n                            <ol>\r\n                                <li>Look over the list of languages and frameworks you are expecting to learn</li>\r\n                                <li>Familiarize yourself with the languages</li>\r\n                                <li>Attend class &amp; particpate</li>\r\n                                <li>Practice, practice, practice</li>\r\n                                <li>Network</li>\r\n                            </ol>\r\n                    <img src=\"img/code.jpg\" alt=\"Image of Computer code\">\r\n <h3>Languages</h3>\r\n <p>If unknown, request ahead of time, a list of languages and frameworks you can expect to learn. Doing so gives you an idea of what you will be learning (needed for suggestion #2) and allows you to do your homework on the job market for the specfic skillset.</p>\r\n\r\n <h3>Familiarize yourself</h3>\r\n<p>Use complimentary resources on the internet or available at your local library to begin building fundamental knowledge about the languages and frameworks, their syntax (fancy word for vocabulary), when and how to use them.  For example, HTML is at the foundation of building any website and is most likely where you'll begin in your bootcamp. If you've never heard of HTML, take time out to learn what the acronym means and how to use the language.  During self-discovery, you may not understand everything and as a result, it's best to keep a list of questions you will have for your instructor and have it available once the cohort begins. In doing the legwork, you can maximize your time in the cohort by reinforcing what you learn, obtain clarification on confusing topics and syntax versus spending time trying to learn the information being taught while also applying it.</p>\r\n\r\n<h3>Attend Class &amp; Participate</h3>\r\n<p>As far back as I can recall, I consistently heard: 80% of success is showing up! Simply put, if you sign up, show up!  Some cohorts offer remote options for attending class. If you find you may not physically make it to class one day, promptly inform your instructor and express your intent to remotely attend instead.  If remotely attending is not an option, dicuss with your instructor what other options are available such as a recording of the class that you can watch at a later time.  Attending class and participting in disucssions by asking and answering questions helps the instructor gage how well you are grasping the information and where you may need extra help.</p>\r\n\r\n<h3>Practice</h3>\r\n<p>We've all heard the adage: <i>\"practice makes perfect\"</i> and like my sister says: <i><b>practice makes habit.</b></i> Practicing is your putting your knowledge into action and the more you practice, the more you remember and the information then becomes second nature.  When something is second nature you can just about do it with your eyes closed or without giving it much thought, resulting in a routine.</p>\r\n\r\n<h3>Network</h3>\r\n<p>When you begin to connect with others in the [tech] community, you begin to foster relationships through friendship. The community becomes your support system you can rely on when you have additional questions, need help or even learning a new language. This is also one of the best networking environments as often others will know of companies that are hiring and can provide invaluable information on such opportunities, which gives you a competitive advantage. Likewise, networking can also give you an opportunity to meet someone who will be more than happy to be your mentor. Consider a mentor your personal guide who can provide one-on-one after hours support.</p> \r\n                    \r\n<p>Finding a network is as easy as visiting <a href=\"https://www.meetup.com/\" target=\"_blank\">meetup.com</a>, creating an account, setting up a search criteria and locating a group or a couple of groups, that are of interest to you.</p>\r\n\r\n  <h3>Closing</h3>\r\n  <p>Never stop learning! The successful completion of the cohort is just the beginning. Given that technology changes very rapidly, if you stop learning you stop growing. Continue on in community, as it also provides motivation in those moments you may feel like giving up. Don't be afraid to try something new, which may at first come with apprehension (writing this post was for me), try learning a new language, blogging, hosting a tech workshop, speaking at gatherings then conferences. Whatever you choose to do outside of your comfort zone, ensure that it's added value.</p>"},{"id":"what-is-html","title":"Is HTML a Programming Language?","author":"Kaisma Penn-Titley","pubDate":"2017-10-03","content":"<p><b>HTML</b> is an acronym for Hypertext Markup Language. Hypertext is the ability to jump from one resource to another, one website to another or from a particular location on a website to a different location on the same website via the clicking of a link.</p> \r\n                    \r\n<p><b>Hypertext</b> is the foundation of the web as it connects various resoruces together much like a spider web, hence the name <i><b>web.</b></i></p>\r\n                    \r\n<p><b>Markup</b> in the context of the web means, adding special notes to a document via <a href=\"https://www.w3schools.com/tags/tag_a.asp\" target=\"_blank\">HTML tags</a>, that describes its meaning and defines its structure. </p> \r\n                    \r\n<p>Given its purpose, HTML is not a programming language, it doesn't give a computer specific instructions.  In a simplified definition, HTML instructs a web browser on how to display a website and the HTML tags describe, to the browser, the content being displayed.</p>\r\n                    \r\n<p>Below is an example of a hyperlink and the website that it redirects the user to. The area underlined in red consist of the <a href=\"https://www.w3schools.com/tags/tag_a.asp\" target=\"_blank\">HTML tag</a>, its <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\" target=\"_blank\">attributes</a>, the <a href=\"https://www.w3schools.com/html/html_urlencode.asp\" target=\"_blank\">URL</a> or web address of the resource the user will be redirected to after clicking on the link as well as the name of the link that will be visible to the user.</p>\r\n                    \r\n<a href=\"img/html-link-eg.png\" target=\"_blank\"><img id=\"hyperlink-example\" src=\"img/html-link-eg.png\" alt=\"Photo of a hyperlink syntac and the website it redirects to\"></a></article>\r\n\r\n<p>Since its inception, there have been many revisions to HTML and the most recent version is HTML5 which refers to a collection of new specifications. Those specifictions include a condensed <a href=\"https://www.w3schools.com/tags/tag_doctype.asp\" target=\"_blank\">doctype</a> , a simplified <a href=\"https://www.w3schools.com/html/html_charset.asp\" target=\"_blank\">charater set</a> declaration, new graphic and multimedia elements, <a href=\"https://medium.freecodecamp.org/what-is-an-api-in-english-please-b880a3214a82\" target=\"_blank\">API interfaces</a>, new attributes for form elements and <a href=\"https://www.w3schools.com/html/html5_semantic_elements.asp\" target=\"_blank\">semantic elements</a>.  While this may not be an inclusive list, it's among the most notable.  The list below is comprised of new semantic elements, elements which mean something: </p>\r\n                    \r\n                    <img id=\"html5-img\" src=\"img/html5.png\" alt=\"Photo representing HTML 5\">\r\n                    <div id=\"semantic-elements\">\r\n                        <ul>\r\n                            <code>\r\n                                <li>&lt;header&gt; &lt;&frasl;header&gt;</li>\r\n                                <li>&lt;nav&gt; &lt;&frasl;nav&gt;</li>\r\n                                <li>&lt;main&gt; &lt;&frasl;main&gt;</li>\r\n                                <li>&lt;section&gt; &lt;&frasl;section&gt;</li>\r\n                                <li>&lt;article&gt; &lt;&frasl;article&gt;</li>\r\n                                <li>&lt;aside&gt; &lt;&frasl;aside&gt;</li>\r\n                                <li>&lt;footer&gt; &lt;&frasl;footer&gt;</li>   \r\n                                <li>&lt;details&gt; &lt;&frasl;details&gt;</li>\r\n                                <li>&lt;figcaption&gt; &lt;&frasl;figcaption&gt;</li>\r\n                                <li>&lt;mark&gt; &lt;&frasl;mark&gt;</li>\r\n                                <li>&lt;summary&gt; &lt;&frasl;summary&gt;</li>\r\n                                <li>&lt;time&gt; &lt;&frasl;time&gt;</li>\r\n                                <li>&lt;figure&gt; &lt;&frasl;figure&gt;</li>\r\n                            </code>\r\n                    </ul>\r\n                </div>\r\n\r\n<p class=\"clear-float\">HTML standards has evolved over the years as so has the web.  Web and HTML standards are developed and maintained by the <a href=\"https://www.w3.org/Consortium/\" target=\"_blank\">World Wide Web Corsortium</a> or W3C, a global network of member organizations, employees and the public, who work together to also ensure the longevity and growth of web standards.</p>\r\n                        \r\n<p>You can learn more about the history of HTML and the web on <a href=\"https://www.w3.org/People/Raggett/book4/ch02.html\" target=\"_blank\">W3Cs'</a> website.  For additional studies on HTML5, <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5\" target=\"_blank\">Mozilla Developer Network</a> or MDN, is a reliable and credible source of information among Developers. <a href=\"https://www.w3schools.com/html/html5_intro.asp\" target=\"_blank\">W3 Schools</a> also offers quick and simplified referneces and information.</p>"},{"id":"angular-react-vue","title":"What is Angular, ReactJS and VueJS?","author":"Kaisma Penn-Titley","pubDate":"2017-10-16","content":"<h1><strong></strong></h1>\r\n<p>To understand the convenience and functionality offered by frameworks like Angular and libraries like ReactJs and VueJs, it is first helpful to understand the difference between a framework and a library. </p>\r\n\r\n<p>A <strong><i>library</i></strong> provides reusable code that can be included in your project and oftentimes address a specific functionality or feature.  However, the developer decides the workflow of the project.</p>\r\n\r\n<p>A <strong><i>framework</i></strong> provides a skeleton or “<i>framework”</i> for a project and more strictly dictates the workflow to be used. </p>\r\n\r\n<p>Now that the definitions of a framework and library are differentiated, let’s briefly discuss what exactly is Angular, ReactJs and VueJs.</p>\r\n\r\n<br>\r\n\r\n<h2>Angular</h2>\r\n<p>Angular is a framework built on JavaScript. It is used in the development of front-end or client-facing Single Page [web] Applications (SPAs) applications and also produces mobile-responsive sites. Supported by Google and a community of individual developers, the framework consists of several libraries, some of which are core and others optional.  The use of Angular is included in HTML markup via a script tag and uses several basic components:</p>\r\n<ul>\r\n<li>Directives</li>\r\n<li>Expressions</li>\r\n<li>Filters</li>\r\n<li>Modules</li>\r\n<li>Controllers </li>\r\n</ul>\r\n\r\n<br>\r\n\r\n<p><strong>Directives</strong> builds on HTML attributes and are defined using a <strong>ng prefix</strong>.</p>\r\n\r\n<p><strong>Expressions</strong> are like placeholders for output and are written inside double curly braces, {{ output }} for example, and can also be located inside directives. The output will be placed exactly where the expression is defined.</p>\r\n\r\n<p><strong>Filters</strong> are used to format and transform data and can be added to expressions using the pipe “ | ” character.</p>\r\n\r\n<p><strong>Modules</strong>  represent Angular applications. The module acts as a container for the various parts of an application and application controllers.</p>\r\n\r\n<p><strong>Controllers</strong> manage Angular applications.</p>\r\n \r\n<p>It is important to note that <strong>AngularJS</strong> is the first version developed and is referred to as version 1 while <strong>Angular</strong>, proclaimed as a complete re-write of AngularJS, is as referred to as version 2.  Angular uses a modular approach meaning that the developer is in control of every GUID contained in the application; GUID is an acronym for Graphical User Interface.</p>\r\n\r\n<br>\r\n\r\n<h2>ReactJS</h2>\r\nLet’s look at ReactJS or simply, React.  React was created and is supported by Facebook.  It falls into the category of a JavaScript library and is used to build user interfaces.  It began only as a tool for web applications but has been extended into creating cross-platform mobile applications using React Native.\r\n\r\nReact prides itself on being a declarative tool, the use of a virtual DOM and the use of JSX to create high-performing UIs, that is, User Interfaces. What exactly does declarative, virtual DOM and JSX mean?\r\n\r\n<br>\r\n<br>\r\n\r\n<ul>\r\n<li><strong>Declarative</strong> means you describe what you are intending to see or render on the page.  This is similar in concept to HTML which uses semantic tags. You describe what needs to be rendered and the library handles the “how-to”.</li><br>\r\n\r\n<li>The <strong>Virtual DOM</strong> is a portrayl of the actual DOM or Document Object Model. In order to minimize page refreshes that can slow down performance, at a basic level, the virtual DOM accepts the changes to be made and directly updates the actual or native DOM.</li> <br>\r\n\r\n<li><strong>JSX</strong> is an acronym meaning JavaScript XML. The official website for ReactJS describes JSX as a “syntax extension to JavaScript”.  JSX is used to create React elements and can have JavaScript expressions inserted into it, those expressions are turned into JavaScript objects once compiled. The most commonly used compiler for JSX is Babel. A simple JSX example is below and was taken from the official <a href=”https://reactjs.org/docs/introducing-jsx.html” target=”_blank>React documentation</a>.</li>\r\n</ul>\r\n\r\n<br>\r\n<p id=”jsx-example”><strong>JSX Variable Declaration</strong>: \t&lt;code&gt;const element = &lt;h1&gt;Hello, World &lt;h1&gt;&ltcode&gt;</p>\r\n\r\n<br>\r\n\r\n\r\n\r\n<h2>VueJS</h2>\r\n<p><a href=”” target=”_blank”>Vuejs.org </a>describes VueJs as <i>“an incrementally adopted ecosystem that scales between a library and fully featured framework”. </i></p>\r\n\r\n<p>VueJs or, simply Vue, is a front-end JavaScript library focused only on the view layer and is directly integrated with other libraries or existing projects. It is capable of powering SPAs when paired with another library.</p>\r\n\r\n<p>VueJs documentation assumes intermediate level of HTML, CSS and JavaScript and prior experience with other frameworks as helpful but not required. The library can be installed via npm, referenced via CDN link, Node Package Manager and like React, uses declarative rendering and a virtual DOM.  The Vue library is under 20KB which makes it very small when compared to other JavaScript libraries. </p>\r\n\r\n<br>\r\n\r\n<h2>Conclusion</h2>\r\n<p>Angular is a JavaScript framework that provides a wireframe and functionality upon implementation which translates into a faster development cycle. Angular manipulates the the native DOM directly which results in slower rendering.  On the other hand, React and Vue are JavaScript libraries that both use a virtual DOM to update the native DOM making them much faster at page updates than Angular. However, React and Vue requires additional libraries for various added functionality, routing for example, whereas with Angular the ability to route is already included in the framework.  </p>\r\n\r\n<p>Additionally, Angular, React and Vue are all open source applications which means that they can be freely used in projects.</p> \r\n\r\n<p>Given information learned and currently known about about each tool, Vue would be the preferred tool as it seems much quicker to learn and apply, than React and Angular.</p>"}]